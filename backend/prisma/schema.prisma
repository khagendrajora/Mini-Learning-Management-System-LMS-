generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 
}

enum Role {
  STUDENT
  ADMIN
}

model User {
  userId       Int       @id @default(autoincrement())
  email        String    @unique
  firebaseId   String    @unique
  password     String
  name         String
  role         Role      @default(STUDENT)
  createdAt    DateTime  @default(now())
  module       Module[]
  comment      Comment[]
  progress     Progress[]
 
}


model Admin {
  adminId  Int      @id @default(autoincrement())
  email   String   @unique
  password String
  name    String
  role    Role  @default(ADMIN)  
  createdAt DateTime @default(now())
  updatedAt DateTime  @updatedAt
}


model Course {
  courseId Int @id @default(autoincrement())
  courseTitle  String
  description String
  duration String
  status String
  thumbnail String?
  path String
  module Module[]
}

model Module {
  moduleId Int @id @default(autoincrement())
  title String
  description String
  file String[]
  video String[]
  course Course? @relation(fields:[courseId],references:[courseId])
  courseId Int?
  user User? @relation(fields:[userId],references:[userId])
  userId Int?
  comment Comment[]
  progress Progress[]
}

model Comment {
  commentId Int @id @default(autoincrement())
  message String
  createdAt DateTime @default(now())
  user User? @relation(fields:[userId],references:[userId])
  userId Int?
  module Module? @relation(fields:[moduleId],references:[moduleId])
  moduleId Int?
}

model Progress {
  progressId            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [userId])
  userId        Int
  module        Module   @relation(fields: [moduleId], references: [moduleId])
  moduleId      Int
  watchedFiles  String[] 
  watchedVideos String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  @@unique([userId, moduleId])
}

